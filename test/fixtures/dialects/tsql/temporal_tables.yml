# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: b1e4095f59be312c148505fac7ea185c9ae9400043a356f212f39efd276c77ac
file:
- batch:
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Employee
              temporal_query:
              - keyword: FOR
              - keyword: SYSTEM_TIME
              - keyword: BETWEEN
              - quoted_literal: "'2021-01-01 00:00:00.0000000'"
              - keyword: AND
              - quoted_literal: "'2022-01-01 00:00:00.0000000'"
          statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Employee
              temporal_query:
              - keyword: FOR
              - keyword: SYSTEM_TIME
              - keyword: ALL
          statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Employee
              temporal_query:
              - keyword: FOR
              - keyword: SYSTEM_TIME
              - keyword: FROM
              - quoted_literal: "'2021-01-01 00:00:00.0000000'"
              - keyword: TO
              - quoted_literal: "'2022-01-01 00:00:00.0000000'"
          statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Employee
              temporal_query:
              - keyword: FOR
              - keyword: SYSTEM_TIME
              - keyword: AS
              - keyword: OF
              - quoted_literal: "'2021-01-01 00:00:00.0000000'"
          statement_terminator: ;
  - statement:
      select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            wildcard_expression:
              wildcard_identifier:
                star: '*'
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                  naked_identifier: Employee
              temporal_query:
              - keyword: FOR
              - keyword: SYSTEM_TIME
              - keyword: CONTAINED
              - keyword: IN
              - bracketed:
                - start_bracket: (
                - quoted_literal: "'2021-01-01 00:00:00.0000000'"
                - comma: ','
                - quoted_literal: "'2022-01-01 00:00:00.0000000'"
                - end_bracket: )
          statement_terminator: ;
  - statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - quoted_identifier: '[dbo]'
        - dot: .
        - quoted_identifier: '[EC DC]'
      - bracketed:
        - start_bracket: (
        - column_definition:
            quoted_identifier: '[Column B]'
            data_type:
              data_type_identifier: '[varchar]'
              bracketed:
                start_bracket: (
                expression:
                  numeric_literal: '100'
                end_bracket: )
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnC]'
            data_type:
              data_type_identifier: varchar
              bracketed:
                start_bracket: (
                expression:
                  numeric_literal: '100'
                end_bracket: )
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnDecimal]'
            data_type:
              data_type_identifier: decimal
              bracketed:
              - start_bracket: (
              - expression:
                  numeric_literal: '10'
              - comma: ','
              - expression:
                  numeric_literal: '3'
              - end_bracket: )
        - end_bracket: )
      - table_option_statement:
          keyword: WITH
          bracketed:
          - start_bracket: (
          - keyword: SYSTEM_VERSIONING
          - comparison_operator:
              raw_comparison_operator: '='
          - keyword: 'ON'
          - bracketed:
              start_bracket: (
              keyword: HISTORY_TABLE
              comparison_operator:
                raw_comparison_operator: '='
              table_reference:
              - naked_identifier: dbo
              - dot: .
              - naked_identifier: EmployeeHistory
              end_bracket: )
          - comma: ','
          - keyword: DURABILITY
          - comparison_operator:
              raw_comparison_operator: '='
          - keyword: SCHEMA_ONLY
          - end_bracket: )
      - statement_terminator: ;
  - statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - quoted_identifier: '[dbo]'
        - dot: .
        - quoted_identifier: '[EC DC]'
      - bracketed:
        - start_bracket: (
        - column_definition:
            quoted_identifier: '[Column B]'
            data_type:
              data_type_identifier: '[varchar]'
              bracketed:
                start_bracket: (
                expression:
                  numeric_literal: '100'
                end_bracket: )
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnC]'
            data_type:
              data_type_identifier: varchar
              bracketed:
                start_bracket: (
                expression:
                  numeric_literal: '100'
                end_bracket: )
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnDecimal]'
            data_type:
              data_type_identifier: decimal
              bracketed:
              - start_bracket: (
              - expression:
                  numeric_literal: '10'
              - comma: ','
              - expression:
                  numeric_literal: '3'
              - end_bracket: )
        - end_bracket: )
      - table_option_statement:
          keyword: WITH
          bracketed:
            start_bracket: (
            keyword: FILETABLE_PRIMARY_KEY_CONSTRAINT_NAME
            comparison_operator:
              raw_comparison_operator: '='
            object_reference:
              naked_identifier: COLUMNC
            end_bracket: )
      - statement_terminator: ;
    statement_terminator: ;
- go_statement:
    keyword: GO
- batch:
    statement:
      create_table_statement:
      - keyword: CREATE
      - keyword: TABLE
      - table_reference:
        - quoted_identifier: '[dbo]'
        - dot: .
        - quoted_identifier: '[EC DC]'
      - bracketed:
        - start_bracket: (
        - column_definition:
            quoted_identifier: '[Column B]'
            data_type:
              data_type_identifier: '[varchar]'
              bracketed:
                start_bracket: (
                expression:
                  numeric_literal: '100'
                end_bracket: )
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnC]'
            data_type:
              data_type_identifier: varchar
              bracketed:
                start_bracket: (
                expression:
                  numeric_literal: '100'
                end_bracket: )
        - comma: ','
        - column_definition:
            quoted_identifier: '[ColumnDecimal]'
            data_type:
              data_type_identifier: decimal
              bracketed:
              - start_bracket: (
              - expression:
                  numeric_literal: '10'
              - comma: ','
              - expression:
                  numeric_literal: '3'
              - end_bracket: )
        - end_bracket: )
      - table_option_statement:
          keyword: WITH
          bracketed:
          - start_bracket: (
          - keyword: DATA_DELETION
          - comparison_operator:
              raw_comparison_operator: '='
          - keyword: 'ON'
          - bracketed:
            - start_bracket: (
            - keyword: FILTER_COLUMN
            - comparison_operator:
                raw_comparison_operator: '='
            - column_reference:
                naked_identifier: ColumnC
            - comma: ','
            - keyword: RETENTION_PERIOD
            - comparison_operator:
                raw_comparison_operator: '='
            - date_part: INFINITE
            - end_bracket: )
          - end_bracket: )
      - statement_terminator: ;
    statement_terminator: ;
- go_statement:
    keyword: GO
